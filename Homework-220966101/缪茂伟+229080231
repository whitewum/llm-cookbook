import os
from openai import OpenAI

client = OpenAI(
  api_key="your-api-key", # 提交时删除你的key，避免泄露
  base_url="https://api.deepseek.com"
)
deployment = "deepseek-chat"

def get_summary(text):
    prompt = f"Summarize the following text in 3-5 sentences:\n\n{text}"
    messages = [{"role": "user", "content": prompt}]
    response = client.chat.completions.create(
        model=deployment,
        messages=messages,
        temperature=0.7,
        max_tokens=150
    )
    return response.choices[0].message.content

# Test the function
sample_text = """
[Your long text here]
"""

summary = get_summary(sample_text)
print("Summary:", summary)

# TODO: 实现一个从文件读取文本的函数
def read_text_from_file(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            return file.read()
    except FileNotFoundError:
        print(f"错误：文件 '{file_path}' 不存在。")
    except IOError:
        print(f"错误：无法读取文件 '{file_path}'。")
    return None

# TODO: Implement error handling for API calls
def get_summary_with_error_handling(text):
    try:
        prompt = f"Summarize the following text in 3-5 sentences:\n\n{text}"
        messages = [{"role": "user", "content": prompt}]
        response = client.chat.completions.create(
            model=deployment,
            messages=messages,
            temperature=0.7,
            max_tokens=150
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"错误：API调用失败 - {e}")
        return None

# TODO: Add functionality to summarize multiple texts
def summarize_multiple_texts(texts):
    summaries = []
    for text in texts:
        summary = get_summary_with_error_handling(text)
        if summary:
            summaries.append(summary)
    return summaries

# Test the function
sample_text = """
[Your long text here]
"""

summary = get_summary_with_error_handling(sample_text)
if summary:
    print("Summary:", summary)

# Test reading text from a file
file_path = "sample.txt"
text_from_file = read_text_from_file(file_path)
if text_from_file:
    summary_from_file = get_summary_with_error_handling(text_from_file)
    if summary_from_file:
        print("Summary from file:", summary_from_file)

# Test summarizing multiple texts
texts = [
    "This is the first text to summarize.",
    "This is the second text to summarize.",
    "This is the third text to summarize."
]

summaries = summarize_multiple_texts(texts)
for i, summary in enumerate(summaries):
    print(f"Summary {i+1}:", summary)
